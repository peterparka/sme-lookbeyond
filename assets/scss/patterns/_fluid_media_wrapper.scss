// =============================================================================
//  For use with `fluid-media-wrapper` where the child is not an `embed`,
//  `iframe`, or `object` element.
//
//  @author MadeByMany
//  @param {Bool} $extend (true) - extend or include this pattern
// =============================================================================

@mixin fluid-media-wrapper__media($extend: true) {
	@if $extend {
		@extend %fluid-media-wrapper__media;
	} @else {
		position: absolute;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
	}
}


%fluid-media-wrapper__media {
	@include fluid-media-wrapper__media($extend: false);
}

// =============================================================================
//  A fluid media wrapper provides the ability to maintain a consistent aspect
//  ratio for video and media content while allowing that content to scale to
//  a maximum width in a responsive layout.
//
//  @author MadeByMany
//  @param {Percentage} $width (100%)
//  @param {List} $ratio (16 9) - an aspect ratio to maintain
//  @param {Bool} $extend (false) - extend or include this pattern
//    - default to false due to the inability to extend in a media query.
//  @throws `$ratio` must be a list with two values.
//  @requires {mixin} fluid-media-wrapper__media
// =============================================================================

@mixin fluid-media-wrapper($width: 100%, $ratio: 16 9, $extend: false) {

	@if length($ratio) < 2 or length($ratio) > 2 {
		@warn '#{inspect($ratio)} must be a list with two values.';
	}

	position: relative;
	width: $width;

	$unitless-width: $width / 100%;

	padding-top: percentage((nth($ratio, 2) / nth($ratio, 1)) * $unitless-width);

	@if width != 100% {
		margin-right: auto;
		margin-left: auto;
	}

	embed, iframe, object {
		@include fluid-media-wrapper__media($extend);
	}
}
